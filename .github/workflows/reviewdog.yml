name: Reviewdog

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read
  pull-requests: write

jobs:
  opts:

    name: Reviewdog options
    runs-on: ubuntu-latest
    outputs:
      reporter: ${{ steps.reporter.outputs.value }}
      filter-mode: ${{ steps.filter-mode.outputs.value }}

    steps:
      - uses: haya14busa/action-cond@v1
        id: reporter
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: "github-pr-review"
          if_false: "github-check"

      - uses: haya14busa/action-cond@v1
        id: filter-mode
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: "diff_context"
          if_false: "nofilter"


  cargo-fmt:

    name: Rust format
    runs-on: ubuntu-latest
    needs: opts
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust stable
        run: rustup update stable && rustup default stable

      - run: cargo fmt

      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: cargo-fmt
          filter_mode: ${{ needs.opts.outputs.filter-mode }}
          fail_on_error: true


  rustlint:

    name: Rust lint
    runs-on: ubuntu-latest
    needs: opts

    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust stable
        run: rustup update stable && rustup default stable && rustup component add clippy

      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: reviewdog (clippy)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |
          reviewdog -runners=clippy \
            -reporter=${{ needs.opts.outputs.reporter }} \
            -filter-mode=${{ needs.opts.outputs.filter-mode }} \
            -fail-on-error


  actionlint:

    runs-on: ubuntu-latest
    needs: opts

    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-actionlint@v1
        with:
          reporter: ${{ needs.opts.outputs.reporter }}
          filter_mode: ${{ needs.opts.outputs.filter-mode }}
          level: warning
