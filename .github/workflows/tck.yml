name: Check TCK

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

concurrency:
  group: tck
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
    - name: Run AsciiDoc TCK
      continue-on-error: true
      id: tck
      env:
        ASCIIDOC_TCK_ADAPTER: ../target/debug/asciidoc2rs
      run: |
        git clone https://gitlab.eclipse.org/eclipse/asciidoc-lang/asciidoc-tck.git asciidoc-tck
        cd asciidoc-tck
        npm ci
        npx asciidoc-tck | awk -v RS= '{f="output-" NR ".txt"; print > f; close(f)}'
        awk '{print $2"="$1}' output-3.txt >> $GITHUB_OUTPUT
        echo '## TCK result' >> $GITHUB_STEP_SUMMARY
        echo '' >> $GITHUB_STEP_SUMMARY
        sed -E 's/  ([^ ])/- \1/;s/âœ”/[x]/;s/[0-9]+\)/[ ]/' output-{1,2}.txt >> $GITHUB_STEP_SUMMARY
        echo '' >> $GITHUB_STEP_SUMMARY
        for i in $(seq 4 $(find . -type f -name 'output-*.txt' -exec echo -n x \; | wc -c))
        do
          [ $(($i % 3)) -eq 1 ] && cat output-$i.txt | xargs -I{} echo -n '__{}' | sed -E 's/.*\)/###/;s/__/ > /g;s/:$//' >> $GITHUB_STEP_SUMMARY
          [ $(($i % 3)) -eq 2 ] && echo '' >> $GITHUB_STEP_SUMMARY
          [ $(($i % 3)) -eq 2 ] && echo '```diff' >> $GITHUB_STEP_SUMMARY
          [ $(($i % 3)) -eq 2 ] && echo '+++ expected' >> $GITHUB_STEP_SUMMARY
          [ $(($i % 3)) -eq 2 ] && echo '--- actual' >> $GITHUB_STEP_SUMMARY
          [ $(($i % 3)) -eq 2 ] && echo '' >> $GITHUB_STEP_SUMMARY
          [ $(($i % 3)) -eq 0 ] && cat output-$i.txt | sed 's/^      //;/^$/,$d;s/^--$/# .../' >> $GITHUB_STEP_SUMMARY
          [ $(($i % 3)) -eq 0 ] && echo '```' >> $GITHUB_STEP_SUMMARY
          [ $(($i % 3)) -eq 0 ] && echo '' >> $GITHUB_STEP_SUMMARY
        done

    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.ACTION_AUTOMATION_APP_ID }}
        private_key: ${{ secrets.ACTION_AUTOMATION_PRIVATE_KEY }}
        installation_retrieval_mode: user
    - name: Dynamic Badges
      uses: Schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ steps.generate_token.outputs.token }}
        gistId: e795d8d23466d049a08e03c23301e996
        filename: asciidoc2rs-passed.json
        label: TCK passed
        color: success
        message: ${{ steps.tck.outputs.passing }}
    - name: Dynamic Badges
      uses: Schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ steps.generate_token.outputs.token }}
        gistId: e795d8d23466d049a08e03c23301e996
        filename: asciidoc2rs-failed.json
        label: TCK failed
        color: important
        message: ${{ steps.tck.outputs.failing }}
